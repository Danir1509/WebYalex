@model WebYalex.Models.entrega

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Entregas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>entrega</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.id_entrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id_entrega, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.id_entrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kilometraje, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kilometraje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kilometraje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripestado_entrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripestado_entrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripestado_entrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripestado_devolucion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripestado_devolucion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripestado_devolucion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagenestado_entrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imagenEstadoEntregaFile" accept="image/*" id="imagenEstadoEntregaFile" onchange="mostrarImagenSeleccionada(this, 'imagenEstadoEntregaPreview')" />
                @Html.ValidationMessageFor(model => model.imagenestado_entrega, "", new { @class = "text-danger" })

                @if (Model.imagenestado_entrega != null)
                {
                    <img src="@Url.Content($"data:image/jpeg;base64,{Convert.ToBase64String(Model.imagenestado_entrega)}")" width="150" height="100" alt="Imagen Estado Entrega" />
                }
                <h4>Se actualizara por:</h4>
                <img id="imagenEstadoEntregaPreview" alt="Vista previa de la imagen" width="150" height="100" style="display: none; " />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagenestado_devolucion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="imagenEstadoDevolucionFile" accept="image/*" id="imagenEstadoDevolucionFile" onchange="mostrarImagenSeleccionada(this, 'imagenEstadoDevolucionPreview')" />
                @Html.ValidationMessageFor(model => model.imagenestado_devolucion, "", new { @class = "text-danger" })

                @if (Model.imagenestado_devolucion != null)
                {
                    <img src="@Url.Content($"data:image/jpeg;base64,{Convert.ToBase64String(Model.imagenestado_devolucion)}")" width="150" height="100" alt="Imagen Estado Devolución" />
                }
                <h4>Se actualizara por:</h4>
                <img id="imagenEstadoDevolucionPreview" alt="Vista previa de la imagen" width="150" height="100" style="display: none;" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecha_entrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_entrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_entrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecha_devolucion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_devolucion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha_devolucion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_cliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_cliente, (IEnumerable<SelectListItem>)ViewBag.listaClientes, "-- Seleccione un cliente --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_cliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_empleado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_empleado, (IEnumerable<SelectListItem>)ViewBag.listaEmpleados, "-- Seleccione un empleado --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_empleado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_vehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_vehiculo, (IEnumerable<SelectListItem>)ViewBag.listaVehiculos, "-- Seleccione un Vehiculo --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_vehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_contrato, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_contrato, (IEnumerable<SelectListItem>)ViewBag.listaContratos, "-- Seleccione un Contrato --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_contrato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<script>
    function mostrarImagenSeleccionada(input, previewId) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                var preview = document.getElementById(previewId);
                preview.src = e.target.result;
                preview.style.display = 'block';
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
<br />
<br />
<br />
<br />